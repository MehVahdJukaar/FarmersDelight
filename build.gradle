plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
}

version = mod_version
group = mod_group_id

base {
    archivesName = "FarmersDelight-Fabric"
}

loom {
    accessWidenerPath = file("src/main/resources/farmersdelight.accesswidener")
}

sourceSets.main.resources {
    srcDirs += 'src/generated/resources'
}

repositories {

    flatDir {
        dirs 'mods'
    }

    mavenLocal()

    maven { url "https://maven.parchmentmc.org" }

    maven {
        url = "https://www.cursemaven.com"
        allowInsecureProtocol = true
    }

    maven {
        url "https://maven.firstdarkdev.xyz/snapshots"
    }

    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
    }

    maven {
        url = "https://api.modrinth.com/maven"
    }

    maven {
        // CraftTweaker, JEI
        name = "BlameJared"
        url = "https://maven.blamejared.com/"
    }
    maven { url "https://maven.ryanliptak.com/" } // AppleSkin


    maven { url = "https://maven.parchmentmc.org" } // Parchment
    maven { url = "https://maven.fabricmc.net/" } // FAPI, Loader
    maven { url = "https://mvn.devos.one/snapshots/" } // Registrate, Porting Lib, Forge Tags, Milk Lib
    maven { // for Porting Lib: Fabric ASM
        url = "https://jitpack.io/"
    }
    maven { url = "https://maven.shedaniel.me/" } // REI and deps
    maven { url = "https://maven.terraformersmc.com/" } // Mod Menu, EMI
    maven { // Reach Entity Attributes
        url = "https://maven.jamieswhiteshirt.com/libs-release"
        content { includeGroup("com.jamieswhiteshirt") }
    }
    mavenCentral() // Mixin Extras
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    mappings loom.layered() {
        it.parchment("org.parchmentmc.data:parchment-${rootProject.parchment_version}")
        it.officialMojangMappings {
            setNameSyntheticMembers(false)
        }
    }

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"


    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}")))
    annotationProcessor 'net.fabricmc:sponge-mixin:0.12.5+mixin.0.8.5'


    for (String module in port_lib_modules.split(",")) {
        include(modImplementation("io.github.fabricators_of_create.Porting-Lib:$module:$port_lib_version"))
    }

    modLocalRuntime("com.terraformersmc:modmenu:${project.modmenu_version}")

    modCompileOnly("com.blamejared.crafttweaker:CraftTweaker-fabric-1.20.1:${crafttweaker_version}")
    // Uncomment the below to test CraftTweaker.
    // modLocalRuntime("com.blamejared.crafttweaker:CraftTweaker-fabric-1.20.1:${crafttweaker_version}")

    modCompileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    modCompileOnly("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
    // Uncomment the below to test JEI.
    modLocalRuntime("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${rei_version}"
    // Uncomment the below to test REI.
    // modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}"

    modCompileOnly("dev.emi:emi-fabric:${emi_version}:api") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    // Uncomment the below to test EMI.
    /*
    modLocalRuntime("dev.emi:emi-fabric:${emi_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    // This is also required for EMI as it uses an out of date FAPI.
    modLocalRuntime "net.fabricmc.fabric-api:fabric-api-deprecated:${fabric_api_version}"
     */
}

processResources {
    var replaceProperties = [
            minecraft_version    : minecraft_version,
            minecraft_min_version: minecraft_min_version,
            minecraft_max_version: minecraft_max_version,

            mod_id               : mod_id,
            mod_name             : mod_name,
            mod_version          : mod_version,
            mod_license          : mod_license,
            mod_authors          : mod_authors,
            mod_description      : mod_description,
            mod_credits          : mod_credits,
            mod_homepage         : mod_homepage,
            mod_github           : mod_github
    ]
    // setting them as input
    inputs.properties replaceProperties

    filesMatching("fabric.mod.json") {
        expand replaceProperties + [project: project]
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}