plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

sourceSets.main.resources {
    srcDirs += 'src/main/generated/resources'
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }


    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}")))
    annotationProcessor 'net.fabricmc:sponge-mixin:0.12.5+mixin.0.8.5'


    for (String module in port_lib_modules.split(",")) {
        modApi("io.github.fabricators_of_create.Porting-Lib:$module:$port_lib_version")
    }
    // modImplementation("curse.maven:forge-config-api-port-fabric-547434:4583000")

    modCompileOnly("com.blamejared.crafttweaker:CraftTweaker-fabric-1.20.1:${crafttweaker_version}")
    modLocalRuntime("com.blamejared.crafttweaker:CraftTweaker-fabric-1.20.1:${crafttweaker_version}")

    modCompileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    modCompileOnly("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
    // Uncomment the below to test JEI.
    // modRuntimeOnly("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")

    modCompileOnly("dev.emi:emi-fabric:${emi_version}:api") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    // Uncomment the below to test EMI.
    modLocalRuntime("dev.emi:emi-fabric:${emi_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    // This is also required for EMI as it uses an out of date FAPI.
    modLocalRuntime "net.fabricmc.fabric-api:fabric-api-deprecated:${fabric_api_version}"

}



processResources {
    // input variables of this task:
    var replaceProperties = [
            minecraft_version    : minecraft_version,
            minecraft_min_version: minecraft_min_version,
            minecraft_max_version: minecraft_max_version,

            mod_id               : mod_id,
            mod_name             : mod_name,
            mod_version          : mod_version,
            mod_license          : mod_license,
            mod_authors          : mod_authors,
            mod_description      : mod_description,
            mod_credits          : mod_credits,
            mod_homepage         : mod_homepage,
            mod_github           : mod_github
    ]
    // setting them as input
    inputs.properties replaceProperties

    filesMatching("fabric.mod.json") {
        expand replaceProperties + [project: project]
    }
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = "fabric"
}

jar {
    archiveClassifier = "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.mod_id + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        maven {
            url = "https://www.cursemaven.com"
            allowInsecureProtocol = true
        }
        maven {
            name = "TerraformersMC"
            url = "https://maven.terraformersmc.com/releases"
        }
        maven {
            url = "https://maven.shedaniel.me"
        }
    }
}
repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases" }
}